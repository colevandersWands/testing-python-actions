name: ET CI Checks

on: [push, pull_request, workflow_dispatch]

jobs:
  ls_linting:
      runs-on: ubuntu-latest
      steps:  
        - uses: actions/checkout@v4
        - uses: ls-lint/action@v2.2.3

  md_formatting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: nosborn/github-action-markdown-cli@v3.3.0
      with:
        files: .
        config_file: .markdownlint.yaml

  # md_linting:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: python version
  #       run: python --version
  #       shell: bash
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install pymarkdownlnt
  #     - name: Markdown - Check Linting
  #       run: pymarkdown scan -r .
  #       shell: bash

  py_formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Python - Check Formatting
        uses: astral-sh/ruff-action@v1
        with:
          args: "format --check"

  py_linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # passing ruff linting is required
      - name: Python - Check Linting - ruff
        uses: astral-sh/ruff-action@v1

      # passing pylint is not required - discuss errors in code review
      # adapted from https://github.com/davidslusser/actions_python_pylint/tree/main
      - name: python version
        run: python --version
        shell: bash
        if: always()
      - name: install pylint
        run: |
          python -  m pip install --upgrade pip
          pip install pylint
        shell: bash
      - name: Python - Check Linting - pylint
        run: "pylint solutions tests  || echo '::warning title=Pylint Error(s)::Discuss solutions and trade-offs in code review.'"
        shell: bash

  py_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: python version
        run: python --version
        shell: bash
      - name: Python - Run Tests
        run: python -m unittest
        shell: bash
